<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用GitHub自动部署Hexo博客自定义域名</title>
    <url>/archives/aa018ece.html</url>
    <content><![CDATA[<p> 今天第一次基于 GitHub Pages 搭建 Hexo 播客，原来用的是本地Hexo 环境，需要先执行 hexo g 编译生成静态文件，然后再 hexo d 推送到 GitHub 上，步骤很多，如果后期网站文章、图片较多时候，就会比较慢，还有时候连接GitHub 不是那么顺畅，需要等待很长的时间。</p>
<p> 后来发现了 GitHub Actions，真是太方便了，自动部署，只需要把你写的 md 文件直接 push 到 git 仓库中，action自动编译，并且把指定文件推送到 GitHub 仓库中，再基于 GitHub Pages 实现静态访问，也支持自定义域名。而且换一个场景，也不需要再在本地部署一套 nodejs + hexo + git环境，可以直接在 GitHub 上编辑 md 文件，在线提交，即时生效。</p>
<span id="more"></span>

<h2 id="什么是-GitHub-Actions"><a href="#什么是-GitHub-Actions" class="headerlink" title="什么是 GitHub Actions"></a>什么是 GitHub Actions</h2><p>GitHub Actions 是 GitHub 的持续集成服务。持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。<br>很多操作在不同项目里面是类似的，完全可以共享。GitHub 允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。<br>如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。</p>
<blockquote>
<p>本例就使用由 theme-keep 提供的 action hexo-deploy-github-pages-action 来自动部署 Hexo。</p>
</blockquote>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>本文以 Hexo + Keep 主题搭建博客为例，教你如何使用 GitHub Actions 将博客自动部署到 GitHub Pages。</p>
<h3 id="创建-GitHub-仓库"><a href="#创建-GitHub-仓库" class="headerlink" title="创建 GitHub 仓库"></a>创建 GitHub 仓库</h3><p>创建两个 GitHub 仓库，一个公共仓库和一个私有仓库。</p>
<ul>
<li><p>私有仓库用来存储 Hexo 项目源代码。（保证你的重要信息不泄露）<br><img src="https://cdn.jsdelivr.net/gh/FitBBC/picx-images-hosting@master/%E4%BD%BF%E7%94%A8GitHub%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/image.5zquv6pxmug0.webp" alt="image"></p>
</li>
<li><p>公共仓库用来存储编译之后的静态页面。<br><img src="https://cdn.jsdelivr.net/gh/FitBBC/picx-images-hosting@master/%E4%BD%BF%E7%94%A8GitHub%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/image-1.17nw9curg3ek.webp" alt="image-1"></p>
</li>
</ul>
<h4 id="没有域名的可以这么设置"><a href="#没有域名的可以这么设置" class="headerlink" title="没有域名的可以这么设置"></a>没有域名的可以这么设置</h4><ol>
<li><p>如果没有自己的域名，最后生成的 hexo 地址是 <a class="link"   href="https://username.github.io/keep-blog" >https://username.github.io/keep-blog<i class="fas fa-external-link-alt"></i></a></p>
</li>
<li><p>使用起来非常不方便，可以直接把公共仓库名定义成 usernmae.github.io<br><img src="https://cdn.jsdelivr.net/gh/FitBBC/picx-images-hosting@master/%E4%BD%BF%E7%94%A8GitHub%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/image-8.4nkpjbo9a3c0.webp" alt="image-8"></p>
</li>
<li><p>这样最后生成的地址就是<a class="link"   href="https://username.github.io/" >https://username.github.io<i class="fas fa-external-link-alt"></i></a></p>
</li>
</ol>
<p>本例：</p>
<ul>
<li>用私有仓库的 main 分支来存储项目源代码。</li>
<li>用公共仓库的 gh-pages 分支 来存储静态页面。新创建的仓库没有这个分支，不用管，后面有脚本自动创建</li>
</ul>
<blockquote>
<p>当私有仓库的 main 分支有内容 push 进来时（例如：主题文件，文章 md 文件、图片等）， 会触发 GitHub Actions 自动编译并部署到公共仓库的 gh-pages 分支。</p>
</blockquote>
<h3 id="创建-GitHub-Token"><a href="#创建-GitHub-Token" class="headerlink" title="创建 GitHub Token"></a>创建 GitHub Token</h3><p>创建一个有 repo 和 workflow 权限的 GitHub Token 。<br>步骤：右上角账号菜单 -&gt; settings -&gt; Developer Settings -&gt; Personal access tokens -&gt; Tokens (classic)。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FitBBC/picx-images-hosting@master/%E4%BD%BF%E7%94%A8GitHub%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/image-2.135tod8s1wts.webp" alt="image-2"></p>
<p>过期时间就选永不过期</p>
<blockquote>
<p>新生成的 Token 只会显示一次，如有遗失，重新生成即可。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/FitBBC/picx-images-hosting@master/%E4%BD%BF%E7%94%A8GitHub%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/image-3.2h7xpfakbw.webp" alt="image-3"></p>
<h3 id="创建-repository-secret"><a href="#创建-repository-secret" class="headerlink" title="创建 repository secret"></a>创建 repository secret</h3><p>将上面生成的 Token 添加到私有仓库的 Secrets 里，并将这个新增的 secret 命名为 HEXO_DEPLOY （名字无所谓，看你喜欢）。</p>
<p>步骤：私有仓库 -&gt; settings -&gt; Secrets and variables -&gt; Actions -&gt; New repository secret。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FitBBC/picx-images-hosting@master/%E4%BD%BF%E7%94%A8GitHub%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/image-4.1o26rengbe5c.webp" alt="image-4"></p>
<blockquote>
<p>新创建的 secret HEXO_DEPLOY 在 Actions 配置文件要用到，需跟配置文件保持一致！</p>
</blockquote>
<h3 id="安装-hexo-keep"><a href="#安装-hexo-keep" class="headerlink" title="安装 hexo-keep"></a>安装 hexo-keep</h3><p>使用 git 拉取私有仓库到本地</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com:用户名/keep-blog-source.git</span><br></pre></td></tr></table></figure>

<p>进入本地环境开始安装 hexo-keep，我这里使用的是 keep 主题，这个主题简约轻快。如果想使用其他主题，可以选择安装 hexo 搜索喜欢的主题进行替换</p>
<ol>
<li><p>本地安装 nodejs 环境，不会安装的可以去官网下载，直接下一步安装。</p>
</li>
<li><p>去 hexo-keep 官网下载<a class="link"   href="https://github.com/theme-keep/hexo-theme-keep-starter/archive/refs/heads/main.zip" >启动模板<i class="fas fa-external-link-alt"></i></a></p>
</li>
<li><p>把解压出来的文件拷贝到本地仓库中</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/FitBBC/picx-images-hosting@master/%E4%BD%BF%E7%94%A8GitHub%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/image-9.6phlmdt78xw0.webp" alt="image-9"></p>
<ol start="4">
<li>执行sudo npm install 进行安装</li>
</ol>
<h3 id="添加-Actions-配置文件"><a href="#添加-Actions-配置文件" class="headerlink" title="添加 Actions 配置文件"></a>添加 Actions 配置文件</h3><ol>
<li>在你的 Hexo 项目根目录下创建 .github 文件夹。</li>
<li>在 .github 文件夹下创建 workflows 文件夹。</li>
<li>在 workflows 文件夹下创建 hexo-deploy.yml 文件。</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/FitBBC/picx-images-hosting@master/%E4%BD%BF%E7%94%A8GitHub%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/image-7.nupyu7emn3k.webp" alt="image-7"></p>
<p>hexo-deploy.yml 文件的内容如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">deploying</span> <span class="string">Hexo</span> <span class="string">project</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">pages</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span> <span class="comment"># master 分支有 push 行为时就触发这个 action</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build-and-deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@master</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">theme-keep/hexo-deploy-github-pages-action@master</span> <span class="comment"># 使用专门部署 Hexo 到 GitHub pages 的 action</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">PERSONAL_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY</span> <span class="string">&#125;&#125;</span> <span class="comment"># secret 名</span></span><br><span class="line">          <span class="attr">PUBLISH_REPOSITORY:</span> <span class="string">用户名/公共仓库名</span> <span class="comment"># 公共仓库，格式：GitHub 用户名/仓库名</span></span><br><span class="line">          <span class="attr">BRANCH:</span> <span class="string">gh-pages</span> <span class="comment"># 分支，填 gh-pages 就行</span></span><br><span class="line">          <span class="attr">PUBLISH_DIR:</span> <span class="string">./public</span> <span class="comment"># 部署 public 目录下的文件</span></span><br><span class="line">          <span class="attr">CNAME:</span> <span class="string">你自己的域名</span>     <span class="comment">#自定义域名，没有可以删除这一行，默认使用 username.github.io</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>在上面的配置文件中，使用了 theme-keep 组织封装的 hexo-deploy-github-pages-action ，是一款专门部署 Hexo 博客到 GitHub pages 的 action。</p>
</blockquote>
<p>至此，准备工作完毕~</p>
<h2 id="自动部署触发流程"><a href="#自动部署触发流程" class="headerlink" title="自动部署触发流程"></a>自动部署触发流程</h2><p>修改你的 Hexo 博客源代码（例如：增加文章、修改文章、更改主题、修改主题配置文件等等）。</p>
<p>把你修改过的 Hexo 项目内容（只提交修改过的那部分内容） push 到 GitHub 私有仓库（本例：keep-blog-source）的 main 分支。</p>
<p>GitHub Actions 检测到 main 分支有内容 push 进来，会自动执行 action 配置文件的命令，将 Hexo 项目编译成静态页面，然后部署到公共仓库的 gh-pages 分支。</p>
<p>gh-pages 分支是 GitHub Pages 服务的固定分支，你只需在 hexo-deploy.yml 文件正确填写，会自动创建。</p>
<p>在私有仓库的 Actions 可以查看到你配置的 action。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FitBBC/picx-images-hosting@master/%E4%BD%BF%E7%94%A8GitHub%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/image-5.1t5fgemkcsps.webp" alt="image-5"></p>
<p>通过 GitHub Actions 自动部署成功的效果图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FitBBC/picx-images-hosting@master/%E4%BD%BF%E7%94%A8GitHub%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/image-6.339fmfffjqm0.webp" alt="image-6"></p>
<blockquote>
<p>keep主题的使用方法和技巧有兴趣的可以去 <a class="link"   href="https://keep-docs.xpoet.cn/basis/get-start/install-theme.html" >keep官网<i class="fas fa-external-link-alt"></i></a>学习</p>
</blockquote>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Keep</tag>
      </tags>
  </entry>
</search>
